/*********************************
 * Author: Avigail Millatiner		
 * File: point.hpp
 * ******************************/

#pragma once

namespace ilrd
{
class Point;


class Point
{
public:
    explicit Point(int x = 0, int y = 0);           //CTOR
    /* Dtor CCtor and operator= to be generated by the compiler */
    
    const Point operator-() const;  //unary operator - 
    const Point operator+(const Point& other) const;
    const Point operator-(const Point& other) const;
    Point& operator+=(const Point& other);
    Point& operator-=(const Point& other); 
    bool operator==(const Point& other);
    inline int X() const;
    inline int Y() const;
    void SetX(int x);
    void SetY(int y);

private:
    int m_x;
    int m_y;
};// Class point

inline int Point::X() const
{
    return m_x;
}

inline int Point::Y() const
{
    return m_y;
}
} // namespace ilrd


